[pytest]
# 第一行固定,必须是 这个
# 添加命令行参数 add options
# 生成测试报告
# 在 pytest 配置文件中 添加配置选项--html=测试报告所在的路径,如果存在目录,目录必须提前创建, 报告的后缀是.html
# addopts = -s --html=report/report.html --self-contained-html


# allure生成测试数据：运行 pytest，并通过 --alluredir 参数指定生成的 JSON 数据存放目录
#addopts = -s --alluredir=./report/allure --clean-alluredir

# 生成 HTML 报告：使用 allure generate 命令将 JSON 数据转换为 HTML 格式的报告
#allure generate report/allure -o report/html --clean

# 打开 HTML 报告：使用 allure open 命令在浏览器中打开生成的报告
#allure open report/html




addopts = -s --html=./report/report_all.html --self-contained-html
# 用例代码所在的路径(相对于配置文件的相对路径)  --self-contained-html 不生成其他文件在这个目录
testpaths = ./scripts
# 用例代码文件的名字,可以使用 * 通配符, (*表示任意个任意字符)
python_files = test_*.py
# 测试类的名字, 以什么开头
python_classes = Test*
# 测试方法名
python_functions = test*



;1, pytest.ini  必须放在最外面，是一个整体的项目，对这个项目整体进行控制
;2，pytest.ini 中的参数不要写错，每个参数都有自己的含义
;3，所有参数共同结合，决定你能不能找到测试用例，去执行
;4，用例所在的目录 设为（目录中包含一个__init__.py 文件）


